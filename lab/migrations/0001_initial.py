# Generated by Django 5.2.7 on 2025-10-23 18:51

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Exame',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=255, verbose_name='Nome do exame')),
                ('descricao', models.TextField(blank=True, help_text='Descrição detalhada do exame', verbose_name='Descrição do exame')),
                ('valor_ref', models.CharField(blank=True, max_length=64, verbose_name='Valor de referência')),
                ('unidade', models.CharField(blank=True, max_length=32, verbose_name='Unidade de medida')),
                ('trl_horas', models.PositiveIntegerField(default=24, verbose_name='Tempo de resposta (horas)')),
            ],
            options={
                'verbose_name': 'Exame',
                'verbose_name_plural': 'Exames',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False, verbose_name='Número de entrada')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome do paciente')),
                ('data_nascimento', models.DateField(blank=True, null=True, verbose_name='Data de nascimento')),
                ('genero', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino')], max_length=32, verbose_name='Gênero')),
                ('telefone', models.CharField(blank=True, max_length=32, verbose_name='Número de celular')),
                ('residencia', models.CharField(blank=True, max_length=255, verbose_name='Residência')),
                ('proveniencia', models.CharField(blank=True, max_length=128, verbose_name='Sector de proveniência')),
                ('nacionalidade', models.CharField(blank=True, max_length=64, verbose_name='País de origem')),
                ('numero_id', models.CharField(max_length=64, unique=True, verbose_name='Documento de Identificação')),
                ('historico_medico', models.TextField(blank=True, null=True, verbose_name='Histórico médico')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Horário de entrada')),
            ],
            options={
                'verbose_name': 'Paciente',
                'verbose_name_plural': 'Pacientes',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='ItemRequisicao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exame', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lab.exame', verbose_name='Exame')),
            ],
            options={
                'verbose_name': 'Item de Requisição',
                'verbose_name_plural': 'Itens de Requisição',
            },
        ),
        migrations.CreateModel(
            name='RequisicaoAnalise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações adicionais')),
                ('analista', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Técnico de Laboratório')),
                ('exames', models.ManyToManyField(blank=True, through='lab.ItemRequisicao', to='lab.exame', verbose_name='Exames requisitados')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lab.paciente', verbose_name='Paciente')),
            ],
            options={
                'verbose_name': 'Requisição de Análises',
                'verbose_name_plural': 'Requisições de Análises',
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='itemrequisicao',
            name='requisicao',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lab.requisicaoanalise', verbose_name='Requisição'),
        ),
        migrations.CreateModel(
            name='Resultado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.CharField(blank=True, max_length=128, verbose_name='Valor obtido')),
                ('unidade', models.CharField(blank=True, max_length=32, verbose_name='Unidade')),
                ('valor_referencia', models.CharField(blank=True, max_length=64, verbose_name='Valor de referência')),
                ('data_insercao', models.DateTimeField(auto_now=True, verbose_name='Data de inserção')),
                ('validado', models.BooleanField(default=False, verbose_name='Validado')),
                ('data_validacao', models.DateTimeField(blank=True, null=True, verbose_name='Data de validação')),
                ('exame', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lab.exame', verbose_name='Exame')),
                ('inserido_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resultados_inseridos', to=settings.AUTH_USER_MODEL, verbose_name='Inserido por')),
                ('requisicao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resultados', to='lab.requisicaoanalise', verbose_name='Requisição')),
                ('validado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resultados_validados', to=settings.AUTH_USER_MODEL, verbose_name='Validado por')),
            ],
            options={
                'verbose_name': 'Resultado de Exame',
                'verbose_name_plural': 'Resultados de Exames',
                'ordering': ['requisicao', 'exame'],
                'unique_together': {('requisicao', 'exame')},
            },
        ),
    ]
